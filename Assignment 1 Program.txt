///////////////////////////////////
//CS 241 - Assignment 1 Program
//Philip Lee-Chin
//September 4, 2018
///////////////////////////////////

#include <iostream>
#include <iomanip>
#include <string>
#include <fstream>
using namespace std;

char btoc(bool value)
{
  return (value)?('T'):('F');
}

char NOT(bool x)
{
  return btoc(!x);
}

char AND(bool x,bool y);

char OR(bool x,bool y);

char IMPLY(bool x,bool y);

char EQUALS(bool x,bool y);

void truthTable()
{
  string header[7] = {"A","B","A & B","A | B","A > B","A = B","!A"};
  fstream fout;
  
  fout.open("Table.txt",fstream::out);
  fout << left;

  for(int i = 0;i < 7;i += 1)
  {
    fout << setw(10) << header[i];
  }

  fout << setw(70) << setfill('-') << "\n";
  fout << setfill(' ') << "\n";
  bool val[2] = {true,false};

  for(int i = 0;i < 2;i += 1)
  {
    for(int j = 0;j < 2;j += 1)
    {
      fout << setw(10) << btoc(val[i]) << setw(10) << btoc(val[j]) << setw(10) << AND(val[i],val[j]);
      fout << setw(10) << OR(val[i],val[j]) << setw(10) << IMPLY(val[i],val[j]);
      fout << setw(10) << EQUALS(val[i],val[j]) << setw(10) << NOT(val[i]);
      fout << "\n";
    }
  }
  
  fout.close();
}

int main()
{
  truthTable();

  return 0;
}

char AND(bool x,bool y)
{ return (x && y ? 'T' : 'F');}

char OR(bool x,bool y)
{return (x || y ? 'T' : 'F');}

char IMPLY(bool x,bool y)
{if (x)
{return y ? 'T' : 'F';}
else
return 'T';
}
char EQUALS(bool x,bool y)
{ return (x == y ? 'T' : 'F');}